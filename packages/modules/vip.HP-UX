# -*-Shell-script-*-

#Copyright (c) 2014 Luigi Tarenga <luigi.tarenga@gmail.com>
#Distributed under the terms of a MIT license.

# configuration: vip_ip vip_prefix { vip_network | vip_netdev }

# work in progress
case $1 in
 start)
   echo "$(date) start vip configuration."
   i=0
   eval vip_ip=\$vip_ip_$i
   while [ -n "$vip_ip" ] ; do
      eval vip_prefix=\$vip_prefix_$i
      eval vip_netdev=\$vip_netdev_$i
      vip_netmask=$(echo "16o2 32^1-2 32 $vip_prefix-^1--[0x]Pp" | dc)

      if [ -z "$vip_netdev" ] ; then
         eval vip_network=\$vip_network_$i
         vip_netdev=$(netstat -rn | grep "^$vip_network "  | { read foo foo foo foo dev foo ; echo $dev ; })
         #WARNING this is not safe if 2 package start with the same vip_network
         if [ -n "$vip_netdev" ] ; then
            idx=1
            while nwmgr -g | grep -q "^$vip_netdev:$idx " ; do idx=$((idx+1)) ; done
            vip_netdev=$vip_netdev:$idx
         fi
      fi

      if [ -n "$vip_netdev" ] ; then
         if ! ping $vip_ip -n 2 -m 1 ; then
            ifconfig $vip_netdev $vip_ip netmask $vip_netmask up || exit 1
            traceroute -q 1 -w 2 -m 1 -s $vip_ip 0.0.0.0 &
         else
            echo "$(date) ip address $vip_ip is in use."
            exit 1
         fi
      else
         echo "$(date) cannot find a device for ip $vip_ip."
         exit 1
      fi

      i=$((i+1))
      eval vip_ip=\$vip_ip_$i
   done
   wait
 ;;

 stop)
   echo "$(date) stop vip configuration."
   i=0
   eval vip_ip=\$vip_ip_$i
   while [ -n "$vip_ip" ] ; do
      eval vip_prefix=\$vip_prefix_$i
      eval vip_netdev=\$vip_netdev_$i

      if [ -z "$vip_netdev" ] ; then
         vip_netdev=$(netstat -inw | grep -F " $vip_ip " | { read dev foo ; echo $dev ; })
      fi

      if [ -n "$vip_netdev" ] ; then
         if netstat -inw | grep -q "^$vip_netdev .* $vip_ip " ; then
            ifconfig $vip_netdev 0.0.0.0 || ret=1
         fi
      fi

      i=$((i+1))
      eval vip_ip=\$vip_ip_$i
   done
 ;;

 status)
   # on critical error return 3, in other case modify num_check/failed_check
   i=0
   eval vip_ip=\$vip_ip_$i
   while [ -n "$vip_ip" ] ; do
      eval vip_prefix=\$vip_prefix_$i
      eval vip_netdev=\$vip_netdev_$i

      if [ -z "$vip_netdev" ] ; then
         vip_netdev=$(netstat -inw | grep -F " $vip_ip " | { read dev foo ; echo $dev ; })
         if [ -z "$vip_netdev" ] ; then
            eval vip_network=\$vip_network_$i
            vip_netdev=$(netstat -rn | grep "^$vip_network "  | { read foo foo foo foo dev foo ; echo $dev ; })
         fi
      fi

      num_check=$((num_check+1))
      if [ -n "$vip_netdev" ] ; then
         if ! netstat -inw | grep -q "^$vip_netdev .* $vip_ip " ; then
            echo "$(date) ip $vip_ip is not configured on $vip_netdev."
            failed_check=$((failed_check+1))
         elif ! ifconfig $vip_netdev | grep -q "^$vip_netdev:.*<UP," ; then
            echo "$(date) $vip_netdev link is down."
            failed_check=$((failed_check+1))
         fi
      else
         echo "$(date) cannot find a device for ip $vip_ip."
         exit 3
      fi

      i=$((i+1))
      eval vip_ip=\$vip_ip_$i
   done
 ;;
esac
