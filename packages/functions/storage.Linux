#!/bin/dash

case $1 in
 start)
   i=0
   eval lun=\$lun_$i

   #key=$(gethostip -x $HOSTNAME)
   #try to avoid requiring gethostip to get ip addr in hex
   #key=$(host $HOSTNAME | head -1 | tr . " ")
   #key=${key#$HOSTNAME has address }
   #key=$(eval printf %02x%02x%02x%02x $key)
   key=$(getent hosts $(hostname) | head -1)
   key=${key% *}
   key=$(eval printf %02x%02x%02x%02x $key)

   while [ -n "$lun" ] ; do
      #reserve
      #echo sg_persist --no-inquiry --out --register --param-aptpl --param-sark=$key --device=$lun >&2
      #echo sg_persist --no-inquiry --out --reserve --prout-type=5 --param-rk=$key --device=$lun >&2

      #release
      #echo sg_persist --no-inquiry --out --release --prout-type=5 --param-rk=$key --device=$lun >&2
      #echo sg_persist --no-inquiry --out --register --param-aptpl --param-rk=$key --param-sark=0 --device=$lun >&2

      #check
      #sg_persist --no-inquiry --read-reservation --device=$lun | grep -q "^[[:space:]]*Key=0x$key"
      #sg_persist --no-inquiry --read-keys --device=$lun | grep -q "^[[:space:]]*0x$key"
      
      i=$((i+1))
      eval lun=\$lun_$i
   done

   # start programs

   exit 0
 ;;

 stop)
   rm /tmp/$(basename $0).started

   # stop programs
   
   # stop storage

   exit 0
 ;;

 status)
   # can return 3 values: 0 up, 1 down, 2 degraded
   # monitor storage

   num_check=$((num_check+1))
   failed_check=$((failed_check+1))
   if [ -f /tmp/$(basename $0).started ] ; then
      failed_check=$((failed_check-1))
   fi

 ;;

esac
