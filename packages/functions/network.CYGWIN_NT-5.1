# -*-Shell-script-*-

#Copyright (c) 2014 Luigi Tarenga <luigi.tarenga@gmail.com>
#Distributed under the terms of a MIT license.

# configuration: ip netmask netdev

case $1 in
 start)
   # start network
   i=0
   eval ip=\$ip_$i
   while [ -n "$ip" ] ; do
      eval netdev=\$netdev_$i
      eval netmask=\$netmask_$i

      netsh interface ip add address name="$netdev" addr=$ip mask=$netmask || exit 1

      i=$((i+1))
      eval ip=\$ip_$i
   done
 ;;

 stop)
   # stop network
   i=0
   eval ip=\$ip_$i
   while [ -n "$ip" ] ; do
      eval prefix=\$prefix_$i
      eval netmask=\$netmask_$i
      eval netdev=\$netdev_$i

      if netsh interface ip show address "$netdev" | grep -q " $ip$" ; then
         netsh interface ip del address name="$netdev" addr=$ip || ret=1
      fi

      i=$((i+1))
      eval ip=\$ip_$i
   done
 ;;

 status)
   # can return 3 values: 0 up, 1 down, 2 degraded
   i=0
   eval ip=\$ip_$i
   while [ -n "$ip" ] ; do
      eval netdev=\$netdev_$i

      num_check=$((num_check+1))
      #ipconfig seems faster than netsh
      if ! ipconfig | awk "/adapter $netdev:/ {p=1; print; next}; /adapter/ {p=0}; p==1" | grep -q " $ip$" ; then
         failed_check=$((failed_check+1))
      elif ipconfig | awk "/adapter $netdev:/ {p=1; print; next}; /adapter/ {p=0}; p==1" | grep -q "Media disconnected" ; then
         failed_check=$((failed_check+1))
      fi

      i=$((i+1))
      eval ip=\$ip_$i
   done
 ;;

esac
