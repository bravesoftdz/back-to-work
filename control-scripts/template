#!/bin/dash

timeout=20
#ip=192.168.68.68; prefix=24; netdev=eth0
start_timeout=10
stop_timeout=10

case $1 in
 start)
   # start network
   if [ -n "$ip" ] ; then
      if arping -q -c 2 -w 3 -D -I $netdev $ip ; then
         ip addr add $ip/$prefix dev $netdev
         arping -q -U -c 2 -I $netdev $ip
      else
         #ip address in use
         echo "$(date) ip address $ip is in use."
         exit 1
      fi
   fi

   # start storage
   touch /tmp/$(basename $0).started
   
   # start programs

   exit 0
 ;;

 stop)
   rm /tmp/$(basename $0).started

   # stop programs
   
   # stop storage

   # stop network
   if [ -n "$ip" ] ; then
      ip addr del $ip/$prefix dev $netdev
   fi
 ;;

 status)
   num_check=2
   failed_check=2

   # can return 3 values: 0 up, 1 down, 2 degraded
   
   # monitor programs
   if [ -f /tmp/$(basename $0).started ] ; then
      failed_check=$(($failed_check-1))
   fi
   
   # monitor storage
   if [ -f /tmp/$(basename $0).started ] ; then
      failed_check=$(($failed_check-1))
   fi
   
   # monitor network
   if [ -n "$ip" ] ; then
      num_check=$(($num_check+1))
      failed_check=$(($failed_check+1))
      if ip addr show dev $netdev | grep -q -F " $ip/$prefix " ; then
         failed_check=$(($failed_check-1))
      fi
   fi

   [ "$failed_check" -eq "$num_check" ] && exit 1
   [ "$failed_check" -eq "0" ] && exit 0
   exit 2
 ;;

 fence)
   echo fence ok
 ;;

 echo)
   eval echo \$$2
 ;;
esac
