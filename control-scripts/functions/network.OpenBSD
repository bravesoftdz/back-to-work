# -*-Shell-script-*-

cidr2mask() {
   local mask="0x"
   local i=0
   local p=$1

   while [ $i -lt 4 ] ; do
      if [ $p -ge 8 ] ; then
         p=$(($p-8))
         mask=${mask}ff
      elif [ $p -gt 0 ] ; then
         case $p in
          7) mask=${mask}fe ;;
          6) mask=${mask}fc ;;
          5) mask=${mask}f8 ;;
          4) mask=${mask}f0 ;;
          3) mask=${mask}e0 ;;
          2) mask=${mask}c0 ;;
          1) mask=${mask}80 ;;
         esac
         p=0
       else
          mask=${mask}00
       fi
       i=$(($i+1))
   done
   echo $mask
}

case $1 in
 start)
   # start network
   i=0
   eval ip=\$ip_$i
   while [ -n "$ip" ] ; do
      eval prefix=\$prefix_$i
      eval netdev=\$netdev_$i

      ifconfig $netdev inet $ip/$prefix alias

      i=$(($i+1))
      eval ip=\$ip_$i
   done
 ;;

 stop)
   # stop network
   i=0
   eval ip=\$ip_$i
   while [ -n "$ip" ] ; do
      eval prefix=\$prefix_$i
      eval netdev=\$netdev_$i

      if ifconfig $netdev | grep -q -F " $ip netmask $(cidr2mask $prefix) " ; then
         ifconfig $netdev inet $ip/$prefix -alias
      fi

      i=$(($i+1))
      eval ip=\$ip_$i
   done
 ;;

 status)
   num_check=${num_check:-0}
   failed_check=${failed_check:-0}

   # can return 3 values: 0 up, 1 down, 2 degraded
   i=0
   eval ip=\$ip_$i
   while [ -n "$ip" ] ; do
      num_check=$(($num_check+1))
      failed_check=$(($failed_check+1))

      eval prefix=\$prefix_$i
      eval netdev=\$netdev_$i

      if ifconfig $netdev | grep -q -F " $ip netmask $(cidr2mask $prefix) " ; then
         failed_check=$(($failed_check-1))
      fi

      i=$(($i+1))
      eval ip=\$ip_$i
   done
 ;;

esac
